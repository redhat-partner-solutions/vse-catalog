---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: run-vse-sync-test
spec:
  params:
    - description: Name of target cluster's kubeconfig secret
      name: kubeconfig-secret
      type: string
    - description: Namespace of target cluster's kubeconfig secret
      name: kubeconfig-namespace
      type: string
    - description: Name kubeconfig secret in pipline namespace
      name: kubeconfig-secret-dest
      type: string
    - description: gChat URL
      name: webhook_url
      type: string
      # yamllint disable-line rule:line-length
      default: "https://chat.googleapis.com/v1/spaces/AAAAiCQuo38/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=QjLrTKvtNWmxFlkce7kVXJu6pzzlLtACBo8I4xem-AU"
  tasks:
    - name: copy-cluster-kubeconfig
      params:
        - name: SCRIPT
          value: |-

            if ! oc get secret $(params.kubeconfig-secret-dest); then

              oc extract -n $(params.kubeconfig-namespace) \
                secrets/$(params.kubeconfig-secret) \
                --to /tmp --confirm=True

              oc create secret generic $(params.kubeconfig-secret-dest) \
                --from-file=kubeconfig=/tmp/kubeconfig \
                --from-file=raw-kubeconfig=/tmp/raw-kubeconfig \
                --type=Opaque

            fi
        - name: VERSION
          value: '4.12'
      taskRef:
        kind: Task
        name: openshift-client
    - name: deploy-vse-sync-test
      params:
        - name: kubeconfig_secret
          value: $(params.kubeconfig-secret-dest)
        - name: kubeconfig_secret_dest_path
          value: /usr/vse//kubeconfig
      runAfter:
        - copy-cluster-kubeconfig
      taskRef:
        kind: Task
        name: deploy-vse-sync-test
  finally:
    - name: gchat-final-notification
      params:
        - name: webhook-url
          value: $(params.webhook_url)
        - name: message
          # yamllint disable-line rule:line-length
          value: "*PTP tests suite results* - $(tasks.deploy-vse-sync-test.results.ptp-test-result)"
      taskRef:
        kind: Task
        name: send-to-gchat-space
      when:
        - input: "$(tasks.status)"
          operator: in
          values: ["Completed", "Failed", "Succeeded"]
